
# Generate Eartharium/astronomy/datetime_tables.h
# -----------------------------------------------
#
# Usage:
# From the sources below, obtain the following three files:
#  * tai-utc.dat
#  * finals2000A.all
#  * deltat.preds
# Run this script to generate the datetime_tables.h file: python build_datetime_tables.py >datetime_tables.h
# Move the file to Eartharium/astronomy/datetime_tables.h
# Recompile Eartharium
#
# Sources for DUT (UT1-UTC):
# https://datacenter.iers.org/data/9/finals2000A.all
# https://cddis.nasa.gov/archive/products/iers/finals2000A.all (requires login, free registration)
# Above are both the same, not sure which is published first, probably the IERS.
# File format: https://cddis.nasa.gov/archive/products/iers/readme.finals2000A
#
# Additional longer range predictions:
# https://cddis.nasa.gov/archive/products/iers/deltat.preds (login)
# Additional early historical values: (these are not likely to change and are hard-coded below)
# https://cddis.nasa.gov/archive/products/iers/historic_deltat.data (login)
#
# Sources for leap seconds:
# https://hpiers.obspm.fr/eoppc/bul/bulc/UTC-TAI.history
# https://cddis.nasa.gov/archive/products/iers/tai-utc.dat (easier to parse, requires login, free registration)
#
# The purpose of datetime_deltat.h is to facilitate conversions between UTC, UT1, TAI and TT (assumed equal to ET and TDT)
# TAI - International Atomic Time, ticks monotonously, adjusted for general relativity to Earth mean sea level.
# TT  - Terrestial Time - ticks monotonously, offset from TAI by a constant +32.184 seconds to align with ET (at which epoch?)
# UT1 - Universal Time 1 - exact time based on Earth rotation (IERS)
# UTC - Coordinated Universal Time - civil time at 0 meridian, apply local time zone to get local wall-clock time. Kept within 0.9 seconds of UT1
#
# TT = TAI + 32.184 seconds
# TT = UT1 + DeltaT
# DeltaT = AccumulatedLeapSeconds + 32.184 - DUT1
# AccumulatedLeapSeconds = TAI - UTC
# DUT1 = UT1 - UTC


# Do LeapSeconds table
with open("tai-utc.dat") as leaps:
# File format:
#  Contains two types of lines
# 1961 JAN  1 =JD 2437300.5  TAI-UTC=   1.4228180 S + (MJD - 37300.) X 0.001296 S
# 1972 JAN  1 =JD 2441317.5  TAI-UTC=  10.0       S + (MJD - 41317.) X 0.0      S
#                 ---------          -------------           -----     ---------
    leaplines = leaps.readlines()

file_head = '''
// NOTE: This file is generated by a python script in Eartharium/astronomical_data/iers/build_datetime_tables.py
//       Any changes to this file should be made in this script, or they will be lost when the file is re-generated!

#pragma once

#include <array>
'''
print(file_head,end='')

# output header for leapseconds here !!!
leap_head = '''
// Leap Seconds are the offset from TAI to UTC
// Since UTC was adopted 1961-01-01 this table starts there.
struct LeapSecondCoefficient {
    double JD;
    double LeapSeconds;
    double BaseMJD;
    double Coefficient;
};
'''
leap_head += f"constexpr std::array<LeapSecondCoefficient, {len(leaplines)}> g_LeapSecondCoefficients {{{{\n"
leap_head += "    //Cumulative leap second values as taken from https://cddis.nasa.gov/archive/products/iers/tai-utc.dat\n"
print(leap_head, end='')

# These are needed when calculating DeltaT
jd = []
accleap = []
mjd = []
coeff = []

for lnum in range(len(leaplines)):
    line = leaplines[lnum]
    jd.append(float(line[16:27]))
    accleap.append(float(line[36:49]))
    mjd.append(float(line[60:66]))
    coeff.append(float(line[70:79]))
    if (lnum < len(leaplines)-1): print("    { " + f"{jd[lnum]:.2f}, {accleap[lnum]:10.7f}, {mjd[lnum]:8.2f}, {coeff[lnum]:8.6f}" + " },  //" + f"{line[:12]}" + "\n",end='')
    else: print("    { " + f"{jd[lnum]:.2f}, {accleap[lnum]:10.7f}, {mjd[lnum]:8.2f}, {coeff[lnum]:8.6f}" + " }   //" + f"{line[:12]}" + "\n",end='')

print("}};\n")
# Done with the leapsecond table


# Helper functions
def getleap(JD): # A bit overkill, as the DeltaT table below only has entries from 1973 onwards, where leapseconds are not using the coefficients
    idx = next((x[0] for x in enumerate(jd) if x[1] > JD), None)
    if idx == None: idx = len(jd)
    mJD = JD - 2400000.5
    leapsec = accleap[idx-1] + (mJD - mjd[idx-1]) * coeff[idx-1]
    #print(JD, idx, jd[idx-1], leapsec)
    return leapsec

def num2str(num, digits):
    return f"{num:0{digits}}"


# output header for DeltaT here
deltat_head = '''
// DeltaT is the offset from UT1 to TT, i.e. TT = UT1 + DeltaT
// (where DeltaT = AccumulatedLeapSeconds + 32.184 - DUT1, and DUT1 = UT1 - UTC)
struct DeltaTValue {
    double JD;
    double DeltaT;
};
'''
# hardcoded here because these are unlikely to change
deltat_head2 = '''
    // Values from https://cddis.nasa.gov/archive/products/iers/historic_deltat.data
    { 2326267.50, 44.000     },  // 1657.00
    { 2326450.00, 43.000     },  // 1657.50
    { 2326632.50, 43.000     },  // 1658.00
    { 2326815.00, 41.000     },  // 1658.50
    { 2326997.50, 40.000     },  // 1659.00
    { 2327180.00, 39.000     },  // 1659.50
    { 2327362.50, 38.000     },  // 1660.00
    { 2327545.50, 37.000     },  // 1660.50
    { 2327728.50, 37.000     },  // 1661.00
    { 2327911.00, 36.000     },  // 1661.50
    { 2328093.50, 36.000     },  // 1662.00
    { 2328276.00, 36.000     },  // 1662.50
    { 2328458.50, 37.000     },  // 1663.00
    { 2328641.00, 37.000     },  // 1663.50
    { 2328823.50, 38.000     },  // 1664.00
    { 2329006.50, 37.000     },  // 1664.50
    { 2329189.50, 36.000     },  // 1665.00
    { 2329372.00, 36.000     },  // 1665.50
    { 2329554.50, 35.000     },  // 1666.00
    { 2329737.00, 35.000     },  // 1666.50
    { 2329919.50, 34.000     },  // 1667.00
    { 2330102.00, 33.000     },  // 1667.50
    { 2330284.50, 33.000     },  // 1668.00
    { 2330467.50, 32.000     },  // 1668.50
    { 2330650.50, 32.000     },  // 1669.00
    { 2330833.00, 31.000     },  // 1669.50
    { 2331015.50, 31.000     },  // 1670.00
    { 2331198.00, 30.000     },  // 1670.50
    { 2331380.50, 30.000     },  // 1671.00
    { 2331563.00, 29.000     },  // 1671.50
    { 2331745.50, 29.000     },  // 1672.00
    { 2331928.50, 29.000     },  // 1672.50
    { 2332111.50, 29.000     },  // 1673.00
    { 2332294.00, 29.000     },  // 1673.50
    { 2332476.50, 28.000     },  // 1674.00
    { 2332659.00, 28.000     },  // 1674.50
    { 2332841.50, 27.000     },  // 1675.00
    { 2333024.00, 27.000     },  // 1675.50
    { 2333206.50, 26.000     },  // 1676.00
    { 2333389.50, 26.000     },  // 1676.50
    { 2333572.50, 25.000     },  // 1677.00
    { 2333755.00, 25.000     },  // 1677.50
    { 2333937.50, 25.000     },  // 1678.00
    { 2334120.00, 26.000     },  // 1678.50
    { 2334302.50, 26.000     },  // 1679.00
    { 2334485.00, 26.000     },  // 1679.50
    { 2334667.50, 26.000     },  // 1680.00
    { 2334850.50, 25.000     },  // 1680.50
    { 2335033.50, 25.000     },  // 1681.00
    { 2335216.00, 25.000     },  // 1681.50
    { 2335398.50, 24.000     },  // 1682.00
    { 2335581.00, 24.000     },  // 1682.50
    { 2335763.50, 24.000     },  // 1683.00
    { 2335946.00, 24.000     },  // 1683.50
    { 2336128.50, 24.000     },  // 1684.00
    { 2336311.50, 24.000     },  // 1684.50
    { 2336494.50, 24.000     },  // 1685.00
    { 2336677.00, 24.000     },  // 1685.50
    { 2336859.50, 24.000     },  // 1686.00
    { 2337042.00, 24.000     },  // 1686.50
    { 2337224.50, 23.000     },  // 1687.00
    { 2337407.00, 23.000     },  // 1687.50
    { 2337589.50, 23.000     },  // 1688.00
    { 2337772.50, 23.000     },  // 1688.50
    { 2337955.50, 22.000     },  // 1689.00
    { 2338138.00, 22.000     },  // 1689.50
    { 2338320.50, 22.000     },  // 1690.00
    { 2338503.00, 22.000     },  // 1690.50
    { 2338685.50, 22.000     },  // 1691.00
    { 2338868.00, 21.000     },  // 1691.50
    { 2339050.50, 21.000     },  // 1692.00
    { 2339233.50, 21.000     },  // 1692.50
    { 2339416.50, 21.000     },  // 1693.00
    { 2339599.00, 21.000     },  // 1693.50
    { 2339781.50, 21.000     },  // 1694.00
    { 2339964.00, 21.000     },  // 1694.50
    { 2340146.50, 21.000     },  // 1695.00
    { 2340329.00, 20.000     },  // 1695.50
    { 2340511.50, 20.000     },  // 1696.00
    { 2340694.50, 20.000     },  // 1696.50
    { 2340877.50, 20.000     },  // 1697.00
    { 2341060.00, 20.000     },  // 1697.50
    { 2341242.50, 20.000     },  // 1698.00
    { 2341425.00, 20.000     },  // 1698.50
    { 2341607.50, 20.000     },  // 1699.00
    { 2341790.00, 20.000     },  // 1699.50
    { 2341972.50, 21.000     },  // 1700.00
    { 2342155.00, 21.000     },  // 1700.50
    { 2342337.50, 21.000     },  // 1701.00
    { 2342520.00, 20.000     },  // 1701.50
    { 2342702.50, 20.000     },  // 1702.00
    { 2342885.00, 20.000     },  // 1702.50
    { 2343067.50, 20.000     },  // 1703.00
    { 2343250.00, 20.000     },  // 1703.50
    { 2343432.50, 19.000     },  // 1704.00
    { 2343615.50, 19.000     },  // 1704.50
    { 2343798.50, 19.000     },  // 1705.00
    { 2343981.00, 19.000     },  // 1705.50
    { 2344163.50, 19.000     },  // 1706.00
    { 2344346.00, 20.000     },  // 1706.50
    { 2344528.50, 20.000     },  // 1707.00
    { 2344711.00, 20.000     },  // 1707.50
    { 2344893.50, 20.000     },  // 1708.00
    { 2345076.50, 19.000     },  // 1708.50
    { 2345259.50, 20.000     },  // 1709.00
    { 2345442.00, 20.000     },  // 1709.50
    { 2345624.50, 20.000     },  // 1710.00
    { 2345807.00, 20.000     },  // 1710.50
    { 2345989.50, 20.000     },  // 1711.00
    { 2346172.00, 20.000     },  // 1711.50
    { 2346354.50, 21.000     },  // 1712.00
    { 2346537.50, 21.000     },  // 1712.50
    { 2346720.50, 21.000     },  // 1713.00
    { 2346903.00, 21.000     },  // 1713.50
    { 2347085.50, 21.000     },  // 1714.00
    { 2347268.00, 21.000     },  // 1714.50
    { 2347450.50, 21.000     },  // 1715.00
    { 2347633.00, 21.000     },  // 1715.50
    { 2347815.50, 21.000     },  // 1716.00
    { 2347998.50, 21.000     },  // 1716.50
    { 2348181.50, 21.000     },  // 1717.00
    { 2348364.00, 21.000     },  // 1717.50
    { 2348546.50, 21.000     },  // 1718.00
    { 2348729.00, 21.000     },  // 1718.50
    { 2348911.50, 21.000     },  // 1719.00
    { 2349094.00, 21.000     },  // 1719.50
    { 2349276.50, 21.100     },  // 1720.00
    { 2349459.50, 21.000     },  // 1720.50
    { 2349642.50, 21.000     },  // 1721.00
    { 2349825.00, 21.000     },  // 1721.50
    { 2350007.50, 20.900     },  // 1722.00
    { 2350190.00, 20.800     },  // 1722.50
    { 2350372.50, 20.700     },  // 1723.00
    { 2350555.00, 20.600     },  // 1723.50
    { 2350737.50, 20.400     },  // 1724.00
    { 2350920.50, 20.200     },  // 1724.50
    { 2351103.50, 20.000     },  // 1725.00
    { 2351286.00, 19.700     },  // 1725.50
    { 2351468.50, 19.400     },  // 1726.00
    { 2351651.00, 19.100     },  // 1726.50
    { 2351833.50, 18.700     },  // 1727.00
    { 2352016.00, 18.300     },  // 1727.50
    { 2352198.50, 17.800     },  // 1728.00
    { 2352381.50, 17.400     },  // 1728.50
    { 2352564.50, 17.000     },  // 1729.00
    { 2352747.00, 16.800     },  // 1729.50
    { 2352929.50, 16.600     },  // 1730.00
    { 2353112.00, 16.400     },  // 1730.50
    { 2353294.50, 16.100     },  // 1731.00
    { 2353477.00, 15.900     },  // 1731.50
    { 2353659.50, 15.700     },  // 1732.00
    { 2353842.50, 15.500     },  // 1732.50
    { 2354025.50, 15.300     },  // 1733.00
    { 2354208.00, 15.000     },  // 1733.50
    { 2354390.50, 14.700     },  // 1734.00
    { 2354573.00, 14.500     },  // 1734.50
    { 2354755.50, 14.300     },  // 1735.00
    { 2354938.00, 14.200     },  // 1735.50
    { 2355120.50, 14.100     },  // 1736.00
    { 2355303.50, 14.100     },  // 1736.50
    { 2355486.50, 14.100     },  // 1737.00
    { 2355669.00, 13.900     },  // 1737.50
    { 2355851.50, 13.700     },  // 1738.00
    { 2356034.00, 13.600     },  // 1738.50
    { 2356216.50, 13.500     },  // 1739.00
    { 2356399.00, 13.500     },  // 1739.50
    { 2356581.50, 13.500     },  // 1740.00
    { 2356764.50, 13.500     },  // 1740.50
    { 2356947.50, 13.400     },  // 1741.00
    { 2357130.00, 13.400     },  // 1741.50
    { 2357312.50, 13.400     },  // 1742.00
    { 2357495.00, 13.400     },  // 1742.50
    { 2357677.50, 13.300     },  // 1743.00
    { 2357860.00, 13.300     },  // 1743.50
    { 2358042.50, 13.200     },  // 1744.00
    { 2358225.50, 13.200     },  // 1744.50
    { 2358408.50, 13.200     },  // 1745.00
    { 2358591.00, 13.100     },  // 1745.50
    { 2358773.50, 13.100     },  // 1746.00
    { 2358956.00, 13.100     },  // 1746.50
    { 2359138.50, 13.000     },  // 1747.00
    { 2359321.00, 13.200     },  // 1747.50
    { 2359503.50, 13.300     },  // 1748.00
    { 2359686.50, 13.400     },  // 1748.50
    { 2359869.50, 13.500     },  // 1749.00
    { 2360052.00, 13.600     },  // 1749.50
    { 2360234.50, 13.700     },  // 1750.00
    { 2360417.00, 13.800     },  // 1750.50
    { 2360599.50, 13.900     },  // 1751.00
    { 2360782.00, 14.000     },  // 1751.50
    { 2360964.50, 14.000     },  // 1752.00
    { 2361147.50, 14.100     },  // 1752.50
    { 2361330.50, 14.100     },  // 1753.00
    { 2361513.00, 14.100     },  // 1753.50
    { 2361695.50, 14.100     },  // 1754.00
    { 2361878.00, 14.200     },  // 1754.50
    { 2362060.50, 14.300     },  // 1755.00
    { 2362243.00, 14.400     },  // 1755.50
    { 2362425.50, 14.400     },  // 1756.00
    { 2362608.50, 14.500     },  // 1756.50
    { 2362791.50, 14.600     },  // 1757.00
    { 2362974.00, 14.600     },  // 1757.50
    { 2363156.50, 14.700     },  // 1758.00
    { 2363339.00, 14.700     },  // 1758.50
    { 2363521.50, 14.700     },  // 1759.00
    { 2363704.00, 14.800     },  // 1759.50
    { 2363886.50, 14.800     },  // 1760.00
    { 2364069.50, 14.900     },  // 1760.50
    { 2364252.50, 14.900     },  // 1761.00
    { 2364435.00, 15.000     },  // 1761.50
    { 2364617.50, 15.000     },  // 1762.00
    { 2364800.00, 15.100     },  // 1762.50
    { 2364982.50, 15.200     },  // 1763.00
    { 2365165.00, 15.300     },  // 1763.50
    { 2365347.50, 15.400     },  // 1764.00
    { 2365530.50, 15.500     },  // 1764.50
    { 2365713.50, 15.600     },  // 1765.00
    { 2365896.00, 15.600     },  // 1765.50
    { 2366078.50, 15.600     },  // 1766.00
    { 2366261.00, 15.800     },  // 1766.50
    { 2366443.50, 15.900     },  // 1767.00
    { 2366626.00, 15.900     },  // 1767.50
    { 2366808.50, 15.900     },  // 1768.00
    { 2366991.50, 15.800     },  // 1768.50
    { 2367174.50, 15.700     },  // 1769.00
    { 2367357.00, 15.800     },  // 1769.50
    { 2367539.50, 15.700     },  // 1770.00
    { 2367722.00, 15.700     },  // 1770.50
    { 2367904.50, 15.700     },  // 1771.00
    { 2368087.00, 15.800     },  // 1771.50
    { 2368269.50, 15.900     },  // 1772.00
    { 2368452.50, 16.100     },  // 1772.50
    { 2368635.50, 16.100     },  // 1773.00
    { 2368818.00, 16.000     },  // 1773.50
    { 2369000.50, 15.900     },  // 1774.00
    { 2369183.00, 15.900     },  // 1774.50
    { 2369365.50, 15.700     },  // 1775.00
    { 2369548.00, 15.400     },  // 1775.50
    { 2369730.50, 15.300     },  // 1776.00
    { 2369913.50, 15.400     },  // 1776.50
    { 2370096.50, 15.500     },  // 1777.00
    { 2370279.00, 15.600     },  // 1777.50
    { 2370461.50, 15.600     },  // 1778.00
    { 2370644.00, 15.600     },  // 1778.50
    { 2370826.50, 15.600     },  // 1779.00
    { 2371009.00, 15.600     },  // 1779.50
    { 2371191.50, 15.600     },  // 1780.00
    { 2371374.50, 15.600     },  // 1780.50
    { 2371557.50, 15.500     },  // 1781.00
    { 2371740.00, 15.500     },  // 1781.50
    { 2371922.50, 15.400     },  // 1782.00
    { 2372105.00, 15.300     },  // 1782.50
    { 2372287.50, 15.200     },  // 1783.00
    { 2372470.00, 15.100     },  // 1783.50
    { 2372652.50, 14.900     },  // 1784.00
    { 2372835.50, 14.800     },  // 1784.50
    { 2373018.50, 14.600     },  // 1785.00
    { 2373201.00, 14.400     },  // 1785.50
    { 2373383.50, 14.300     },  // 1786.00
    { 2373566.00, 14.200     },  // 1786.50
    { 2373748.50, 14.100     },  // 1787.00
    { 2373931.00, 14.200     },  // 1787.50
    { 2374113.50, 14.200     },  // 1788.00
    { 2374296.50, 13.900     },  // 1788.50
    { 2374479.50, 13.700     },  // 1789.00
    { 2374662.00, 13.500     },  // 1789.50
    { 2374844.50, 13.300     },  // 1790.00
    { 2375027.00, 13.100     },  // 1790.50
    { 2375209.50, 13.000     },  // 1791.00
    { 2375392.00, 13.200     },  // 1791.50
    { 2375574.50, 13.200     },  // 1792.00
    { 2375757.50, 13.100     },  // 1792.50
    { 2375940.50, 13.100     },  // 1793.00
    { 2376123.00, 13.200     },  // 1793.50
    { 2376305.50, 13.300     },  // 1794.00
    { 2376488.00, 13.500     },  // 1794.50
    { 2376670.50, 13.500     },  // 1795.00
    { 2376853.00, 13.400     },  // 1795.50
    { 2377035.50, 13.200     },  // 1796.00
    { 2377218.50, 13.200     },  // 1796.50
    { 2377401.50, 13.100     },  // 1797.00
    { 2377584.00, 13.100     },  // 1797.50
    { 2377766.50, 13.000     },  // 1798.00
    { 2377949.00, 12.800     },  // 1798.50
    { 2378131.50, 12.600     },  // 1799.00
    { 2378314.00, 12.700     },  // 1799.50
    { 2378496.50, 12.600     },  // 1800.00
    { 2378679.00, 12.300     },  // 1800.50
    { 2378861.50, 12.000     },  // 1801.00
    { 2379044.00, 11.900     },  // 1801.50
    { 2379226.50, 11.800     },  // 1802.00
    { 2379409.00, 11.600     },  // 1802.50
    { 2379591.50, 11.400     },  // 1803.00
    { 2379774.00, 11.200     },  // 1803.50
    { 2379956.50, 11.100     },  // 1804.00
    { 2380139.50, 11.100     },  // 1804.50
    { 2380322.50, 11.100     },  // 1805.00
    { 2380505.00, 11.100     },  // 1805.50
    { 2380687.50, 11.100     },  // 1806.00
    { 2380870.00, 11.200     },  // 1806.50
    { 2381052.50, 11.100     },  // 1807.00
    { 2381235.00, 11.100     },  // 1807.50
    { 2381417.50, 11.200     },  // 1808.00
    { 2381600.50, 11.400     },  // 1808.50
    { 2381783.50, 11.500     },  // 1809.00
    { 2381966.00, 11.300     },  // 1809.50
    { 2382148.50, 11.200     },  // 1810.00
    { 2382331.00, 11.400     },  // 1810.50
    { 2382513.50, 11.700     },  // 1811.00
    { 2382696.00, 11.900     },  // 1811.50
    { 2382878.50, 11.900     },  // 1812.00
    { 2383061.50, 11.900     },  // 1812.50
    { 2383244.50, 11.800     },  // 1813.00
    { 2383427.00, 11.700     },  // 1813.50
    { 2383609.50, 11.800     },  // 1814.00
    { 2383792.00, 11.800     },  // 1814.50
    { 2383974.50, 11.800     },  // 1815.00
    { 2384157.00, 11.700     },  // 1815.50
    { 2384339.50, 11.600     },  // 1816.00
    { 2384522.50, 11.600     },  // 1816.50
    { 2384705.50, 11.500     },  // 1817.00
    { 2384888.00, 11.500     },  // 1817.50
    { 2385070.50, 11.400     },  // 1818.00
    { 2385253.00, 11.400     },  // 1818.50
    { 2385435.50, 11.300     },  // 1819.00
    { 2385618.00, 11.300     },  // 1819.50
    { 2385800.50, 11.130     },  // 1820.00
    { 2385983.50, 11.160     },  // 1820.50
    { 2386166.50, 10.940     },  // 1821.00
    { 2386349.00, 10.720     },  // 1821.50
    { 2386531.50, 10.290     },  // 1822.00
    { 2386714.00, 10.040     },  // 1822.50
    { 2386896.50,  9.940     },  // 1823.00
    { 2387079.00,  9.910     },  // 1823.50
    { 2387261.50,  9.880     },  // 1824.00
    { 2387444.50,  9.860     },  // 1824.50
    { 2387627.50,  9.720     },  // 1825.00
    { 2387810.00,  9.670     },  // 1825.50
    { 2387992.50,  9.660     },  // 1826.00
    { 2388175.00,  9.640     },  // 1826.50
    { 2388357.50,  9.510     },  // 1827.00
    { 2388540.00,  9.400     },  // 1827.50
    { 2388722.50,  9.210     },  // 1828.00
    { 2388905.50,  9.000     },  // 1828.50
    { 2389088.50,  8.600     },  // 1829.00
    { 2389271.00,  8.290     },  // 1829.50
    { 2389453.50,  7.950     },  // 1830.00
    { 2389636.00,  7.730     },  // 1830.50
    { 2389818.50,  7.590     },  // 1831.00
    { 2390001.00,  7.490     },  // 1831.50
    { 2390183.50,  7.360     },  // 1832.00
    { 2390366.50,  7.260     },  // 1832.50
    { 2390549.50,  7.100     },  // 1833.00
    { 2390732.00,  7.000     },  // 1833.50
    { 2390914.50,  6.890     },  // 1834.00
    { 2391097.00,  6.820     },  // 1834.50
    { 2391279.50,  6.730     },  // 1835.00
    { 2391462.00,  6.640     },  // 1835.50
    { 2391644.50,  6.390     },  // 1836.00
    { 2391827.50,  6.280     },  // 1836.50
    { 2392010.50,  6.250     },  // 1837.00
    { 2392193.00,  6.270     },  // 1837.50
    { 2392375.50,  6.250     },  // 1838.00
    { 2392558.00,  6.270     },  // 1838.50
    { 2392740.50,  6.220     },  // 1839.00
    { 2392923.00,  6.240     },  // 1839.50
    { 2393105.50,  6.220     },  // 1840.00
    { 2393288.50,  6.270     },  // 1840.50
    { 2393471.50,  6.300     },  // 1841.00
    { 2393654.00,  6.360     },  // 1841.50
    { 2393836.50,  6.350     },  // 1842.00
    { 2394019.00,  6.370     },  // 1842.50
    { 2394201.50,  6.320     },  // 1843.00
    { 2394384.00,  6.330     },  // 1843.50
    { 2394566.50,  6.330     },  // 1844.00
    { 2394749.50,  6.370     },  // 1844.50
    { 2394932.50,  6.370     },  // 1845.00
    { 2395115.00,  6.410     },  // 1845.50
    { 2395297.50,  6.400     },  // 1846.00
    { 2395480.00,  6.440     },  // 1846.50
    { 2395662.50,  6.460     },  // 1847.00
    { 2395845.00,  6.510     },  // 1847.50
    { 2396027.50,  6.480     },  // 1848.00
    { 2396210.50,  6.510     },  // 1848.50
    { 2396393.50,  6.530     },  // 1849.00
    { 2396576.00,  6.580     },  // 1849.50
    { 2396758.50,  6.550     },  // 1850.00
    { 2396941.00,  6.610     },  // 1850.50
    { 2397123.50,  6.690     },  // 1851.00
    { 2397306.00,  6.800     },  // 1851.50
    { 2397488.50,  6.840     },  // 1852.00
    { 2397671.50,  6.940     },  // 1852.50
    { 2397854.50,  7.030     },  // 1853.00
    { 2398037.00,  7.130     },  // 1853.50
    { 2398219.50,  7.150     },  // 1854.00
    { 2398402.00,  7.220     },  // 1854.50
    { 2398584.50,  7.260     },  // 1855.00
    { 2398767.00,  7.300     },  // 1855.50
    { 2398949.50,  7.230     },  // 1856.00
    { 2399132.50,  7.220     },  // 1856.50
    { 2399315.50,  7.210     },  // 1857.00
    { 2399498.00,  7.200     },  // 1857.50
    { 2399680.50,  6.990     },  // 1858.00
    { 2399863.00,  6.980     },  // 1858.50
    { 2400045.50,  7.190     },  // 1859.00
    { 2400228.00,  7.360     },  // 1859.50
    { 2400410.50,  7.350     },  // 1860.00
    { 2400593.50,  7.390     },  // 1860.50
    { 2400776.50,  7.410     },  // 1861.00
    { 2400959.00,  7.450     },  // 1861.50
    { 2401141.50,  7.360     },  // 1862.00
    { 2401324.00,  7.180     },  // 1862.50
    { 2401506.50,  6.950     },  // 1863.00
    { 2401689.00,  6.720     },  // 1863.50
    { 2401871.50,  6.450     },  // 1864.00
    { 2402054.50,  6.240     },  // 1864.50
    { 2402237.50,  5.920     },  // 1865.00
    { 2402420.00,  5.590     },  // 1865.50
    { 2402602.50,  5.150     },  // 1866.00
    { 2402785.00,  4.670     },  // 1866.50
    { 2402967.50,  4.110     },  // 1867.00
    { 2403150.00,  3.520     },  // 1867.50
    { 2403332.50,  2.940     },  // 1868.00
    { 2403515.50,  2.470     },  // 1868.50
    { 2403698.50,  1.970     },  // 1869.00
    { 2403881.00,  1.520     },  // 1869.50
    { 2404063.50,  1.040     },  // 1870.00
    { 2404246.00,  0.600     },  // 1870.50
    { 2404428.50,  0.110     },  // 1871.00
    { 2404611.00, -0.340     },  // 1871.50
    { 2404793.50, -0.820     },  // 1872.00
    { 2404976.50, -1.250     },  // 1872.50
    { 2405159.50, -1.700     },  // 1873.00
    { 2405342.00, -2.080     },  // 1873.50
    { 2405524.50, -2.480     },  // 1874.00
    { 2405707.00, -2.820     },  // 1874.50
    { 2405889.50, -3.190     },  // 1875.00
    { 2406072.00, -3.500     },  // 1875.50
    { 2406254.50, -3.840     },  // 1876.00
    { 2406437.50, -4.140     },  // 1876.50
    { 2406620.50, -4.430     },  // 1877.00
    { 2406803.00, -4.590     },  // 1877.50
    { 2406985.50, -4.790     },  // 1878.00
    { 2407168.00, -4.920     },  // 1878.50
    { 2407350.50, -5.090     },  // 1879.00
    { 2407533.00, -5.240     },  // 1879.50
    { 2407715.50, -5.360     },  // 1880.00
    { 2407898.50, -5.340     },  // 1880.50
    { 2408081.50, -5.370     },  // 1881.00
    { 2408264.00, -5.320     },  // 1881.50
    { 2408446.50, -5.340     },  // 1882.00
    { 2408629.00, -5.330     },  // 1882.50
    { 2408811.50, -5.400     },  // 1883.00
    { 2408994.00, -5.470     },  // 1883.50
    { 2409176.50, -5.580     },  // 1884.00
    { 2409359.50, -5.660     },  // 1884.50
    { 2409542.50, -5.740     },  // 1885.00
    { 2409725.00, -5.680     },  // 1885.50
    { 2409907.50, -5.690     },  // 1886.00
    { 2410090.00, -5.650     },  // 1886.50
    { 2410272.50, -5.670     },  // 1887.00
    { 2410455.00, -5.680     },  // 1887.50
    { 2410637.50, -5.730     },  // 1888.00
    { 2410820.50, -5.720     },  // 1888.50
    { 2411003.50, -5.780     },  // 1889.00
    { 2411186.00, -5.790     },  // 1889.50
    { 2411368.50, -5.860     },  // 1890.00
    { 2411551.00, -5.890     },  // 1890.50
    { 2411733.50, -6.010     },  // 1891.00
    { 2411916.00, -6.130     },  // 1891.50
    { 2412098.50, -6.280     },  // 1892.00
    { 2412281.50, -6.410     },  // 1892.50
    { 2412464.50, -6.530     },  // 1893.00
    { 2412647.00, -6.490     },  // 1893.50
    { 2412829.50, -6.500     },  // 1894.00
    { 2413012.00, -6.450     },  // 1894.50
    { 2413194.50, -6.410     },  // 1895.00
    { 2413377.00, -6.260     },  // 1895.50
    { 2413559.50, -6.110     },  // 1896.00
    { 2413742.50, -5.900     },  // 1896.50
    { 2413925.50, -5.630     },  // 1897.00
    { 2414108.00, -5.130     },  // 1897.50
    { 2414290.50, -4.680     },  // 1898.00
    { 2414473.00, -4.190     },  // 1898.50
    { 2414655.50, -3.720     },  // 1899.00
    { 2414838.00, -3.210     },  // 1899.50
    { 2415020.50, -2.700     },  // 1900.00
    { 2415203.00, -2.090     },  // 1900.50
    { 2415385.50, -1.480     },  // 1901.00
    { 2415568.00, -0.750     },  // 1901.50
    { 2415750.50, -0.080     },  // 1902.00
    { 2415933.00,  0.620     },  // 1902.50
    { 2416115.50,  1.260     },  // 1903.00
    { 2416298.00,  1.950     },  // 1903.50
    { 2416480.50,  2.590     },  // 1904.00
    { 2416663.50,  3.280     },  // 1904.50
    { 2416846.50,  3.920     },  // 1905.00
    { 2417029.00,  4.610     },  // 1905.50
    { 2417211.50,  5.200     },  // 1906.00
    { 2417394.00,  5.730     },  // 1906.50
    { 2417576.50,  6.290     },  // 1907.00
    { 2417759.00,  7.000     },  // 1907.50
    { 2417941.50,  7.680     },  // 1908.00
    { 2418124.50,  8.450     },  // 1908.50
    { 2418307.50,  9.130     },  // 1909.00
    { 2418490.00,  9.780     },  // 1909.50
    { 2418672.50, 10.380     },  // 1910.00
    { 2418855.00, 10.990     },  // 1910.50
    { 2419037.50, 11.640     },  // 1911.00
    { 2419220.00, 12.470     },  // 1911.50
    { 2419402.50, 13.230     },  // 1912.00
    { 2419585.50, 14.000     },  // 1912.50
    { 2419768.50, 14.690     },  // 1913.00
    { 2419951.00, 15.380     },  // 1913.50
    { 2420133.50, 16.000     },  // 1914.00
    { 2420316.00, 16.640     },  // 1914.50
    { 2420498.50, 17.190     },  // 1915.00
    { 2420681.00, 17.720     },  // 1915.50
    { 2420863.50, 18.190     },  // 1916.00
    { 2421046.50, 18.670     },  // 1916.50
    { 2421229.50, 19.130     },  // 1917.00
    { 2421412.00, 19.690     },  // 1917.50
    { 2421594.50, 20.140     },  // 1918.00
    { 2421777.00, 20.540     },  // 1918.50
    { 2421959.50, 20.860     },  // 1919.00
    { 2422142.00, 21.140     },  // 1919.50
    { 2422324.50, 21.410     },  // 1920.00
    { 2422507.50, 21.780     },  // 1920.50
    { 2422690.50, 22.060     },  // 1921.00
    { 2422873.00, 22.300     },  // 1921.50
    { 2423055.50, 22.510     },  // 1922.00
    { 2423238.00, 22.790     },  // 1922.50
    { 2423420.50, 23.010     },  // 1923.00
    { 2423603.00, 23.290     },  // 1923.50
    { 2423785.50, 23.460     },  // 1924.00
    { 2423968.50, 23.550     },  // 1924.50
    { 2424151.50, 23.630     },  // 1925.00
    { 2424334.00, 23.800     },  // 1925.50
    { 2424516.50, 23.950     },  // 1926.00
    { 2424699.00, 24.250     },  // 1926.50
    { 2424881.50, 24.390     },  // 1927.00
    { 2425064.00, 24.420     },  // 1927.50
    { 2425246.50, 24.340     },  // 1928.00
    { 2425429.50, 24.220     },  // 1928.50
    { 2425612.50, 24.100     },  // 1929.00
    { 2425795.00, 24.080     },  // 1929.50
    { 2425977.50, 24.020     },  // 1930.00
    { 2426160.00, 24.040     },  // 1930.50
    { 2426342.50, 23.980     },  // 1931.00
    { 2426525.00, 23.910     },  // 1931.50
    { 2426707.50, 23.890     },  // 1932.00
    { 2426890.50, 23.950     },  // 1932.50
    { 2427073.50, 23.930     },  // 1933.00
    { 2427256.00, 23.920     },  // 1933.50
    { 2427438.50, 23.880     },  // 1934.00
    { 2427621.00, 23.940     },  // 1934.50
    { 2427803.50, 23.910     },  // 1935.00
    { 2427986.00, 23.820     },  // 1935.50
    { 2428168.50, 23.760     },  // 1936.00
    { 2428351.50, 23.870     },  // 1936.50
    { 2428534.50, 23.910     },  // 1937.00
    { 2428717.00, 23.950     },  // 1937.50
    { 2428899.50, 23.960     },  // 1938.00
    { 2429082.00, 24.000     },  // 1938.50
    { 2429264.50, 24.040     },  // 1939.00
    { 2429447.00, 24.200     },  // 1939.50
    { 2429629.50, 24.350     },  // 1940.00
    { 2429812.50, 24.610     },  // 1940.50
    { 2429995.50, 24.820     },  // 1941.00
    { 2430178.00, 25.090     },  // 1941.50
    { 2430360.50, 25.300     },  // 1942.00
    { 2430543.00, 25.560     },  // 1942.50
    { 2430725.50, 25.770     },  // 1943.00
    { 2430908.00, 26.050     },  // 1943.50
    { 2431090.50, 26.270     },  // 1944.00
    { 2431273.50, 26.540     },  // 1944.50
    { 2431456.50, 26.760     },  // 1945.00
    { 2431639.00, 27.040     },  // 1945.50
    { 2431821.50, 27.270     },  // 1946.00
    { 2432004.00, 27.550     },  // 1946.50
    { 2432186.50, 27.770     },  // 1947.00
    { 2432369.00, 28.030     },  // 1947.50
    { 2432551.50, 28.250     },  // 1948.00
    { 2432734.50, 28.500     },  // 1948.50
    { 2432917.50, 28.700     },  // 1949.00
    { 2433100.00, 28.950     },  // 1949.50
    { 2433282.50, 29.150     },  // 1950.00
    { 2433465.00, 29.380     },  // 1950.50
    { 2433647.50, 29.570     },  // 1951.00
    { 2433830.00, 29.800     },  // 1951.50
    { 2434012.50, 29.970     },  // 1952.00
    { 2434195.50, 30.190     },  // 1952.50
    { 2434378.50, 30.360     },  // 1953.00
    { 2434561.00, 30.570     },  // 1953.50
    { 2434743.50, 30.720     },  // 1954.00
    { 2434926.00, 30.930     },  // 1954.50
    { 2435108.50, 31.070     },  // 1955.00
    { 2435291.00, 31.240     },  // 1955.50
    { 2435473.50, 31.349     },  // 1956.00
    { 2435656.50, 31.516     },  // 1956.50
    { 2435839.50, 31.677     },  // 1957.00
    { 2436022.00, 31.923     },  // 1957.50
    { 2436204.50, 32.166     },  // 1958.00
    { 2436387.00, 32.449     },  // 1958.50
    { 2436569.50, 32.671     },  // 1959.00
    { 2436752.00, 32.919     },  // 1959.50
    { 2436934.50, 33.150     },  // 1960.00
    { 2437117.50, 33.397     },  // 1960.50
    { 2437300.50, 33.584     },  // 1961.00
    { 2437483.00, 33.804     },  // 1961.50
    { 2437665.50, 33.992     },  // 1962.00
    { 2437848.00, 34.240     },  // 1962.50
    { 2438030.50, 34.466     },  // 1963.00
    { 2438213.00, 34.731     },  // 1963.50
    { 2438395.50, 35.030     },  // 1964.00
    { 2438578.50, 35.400     },  // 1964.50
    { 2438761.50, 35.738     },  // 1965.00
    { 2438944.00, 36.147     },  // 1965.50
    { 2439126.50, 36.546     },  // 1966.00
    { 2439309.00, 36.995     },  // 1966.50
    { 2439491.50, 37.429     },  // 1967.00
    { 2439674.00, 37.879     },  // 1967.50
    { 2439856.50, 38.291     },  // 1968.00
    { 2440039.50, 38.753     },  // 1968.50
    { 2440222.50, 39.204     },  // 1969.00
    { 2440405.00, 39.707     },  // 1969.50
    { 2440587.50, 40.182     },  // 1970.00
    { 2440770.00, 40.706     },  // 1970.50
    { 2440952.50, 41.170     },  // 1971.00
    { 2441135.00, 41.686     },  // 1971.50
    { 2441317.50, 42.227     },  // 1972.00
    { 2441500.50, 42.825     },  // 1972.50
    
    //Values from https://cddis.nasa.gov/archive/products/iers/finals2000A.all
'''

# Do DeltaT table
djd = [] #JD
dut = [] #DUT1
ddt = [] #DeltaT
dat = [] #Date string
als = [] #Acc leap sec
iop = [] #IERS (I) or Prediction (P)

# Read the whole file into memory
with open("finals2000A.all") as f2000A:
    table = f2000A.readlines()

# Sift out the relevant parameters
for l,line in enumerate(table):
    #print(line,end='')
    delt = line[58:68]
    if delt == '          ': break # The file has some trailing entries with just the dates and no actual data.
    dut.append(float(delt))
    djd.append(float(line[7:15]) + 2400000.5)
    als.append(getleap(djd[l]))
    ddt.append(als[l] + 32.184 - dut[l])
    iop.append(line[57])
    # pick out the date too for a nice comment
    yr = line[0:2]
    mo = line[2:4]
    da = line[4:6]
    yri = int(yr)
    if yri > 45: yr = yri + 1900
    else: yr = yri + 2000
    dat.append(f"{yr:04}-{int(mo):02}-{int(da):02}")

# Do https://cddis.nasa.gov/archive/products/iers/deltat.preds here (skip values already covered above) !!!

with open("deltat.preds") as dtpred:
    table = dtpred.readlines()

# Don't just append to above lists, that just makes output harder
pjd = []
pyr = []
pdt = []

for l,line in enumerate(table):
    if l == 0: continue # skip header line
    #print(line,end='')
    mjd = line[0:9]
    jd = float(mjd) + 2400000.5
    if jd > djd[-1]:    # Add entries newer than last from above
        #print(jd, line[18:23], line[10:17])
        pjd.append(jd)
        pdt.append(float(line[18:23]))
        pyr.append(line[10:17])

# Output DeltaT table

deltat_head += f"constexpr std::array<DeltaTValue, {len(dut)+len(pdt)+632}> g_DeltaTValues {{{{"
print(deltat_head, end='')
print(deltat_head2, end='')

# Produce lines like these:
#    { 2460332.50,  0.0062357 },   // 2024-01-23 IERS value: AccumulatedLeapSeconds = 37, DUT1 =  0.0062357
#     ...
#    { 2460854.50,  0.0293075 }    // 2025-06-28 Prediction: AccumulatedLeapSeconds = 37, DUT1 =  0.0293075
for l in range(len(dut)):
    #if l == len(dut)-1: print("    { " + f"{djd[l]:.2f}, {ddt[l]:10.7f}" + " }   // ", end='')  # last entry
    #else: print("    { " + f"{djd[l]:.2f}, {ddt[l]:10.7f}" + " },  // ", end='')
    print("    { " + f"{djd[l]:.2f}, {ddt[l]:10.7f}" + " },  // ", end='')  # always end with comma, there is a section after this one
    if (iop[l] == 'I'): ip = "IERS value:"
    else: ip = "Prediction:"
    print(f"{dat[l]} {ip} AccumulatedLeapSeconds = {int(als[l]):2}, DUT1 = {dut[l]:10.7f}")

print("\n    //Values from https://cddis.nasa.gov/archive/products/iers/deltat.preds\n", end='')

ip = "Prediction" # These are all predictions
for l in range(len(pdt)):
    if l == len(pdt)-1: print("    { " + f"{pjd[l]:.2f}, {pdt[l]:<10.2f}" + " }   // ", end='')  # last entry
    else: print("    { " + f"{pjd[l]:.2f}, {pdt[l]:<10.2f}" + " },  // ", end='')
    print(f"{pyr[l]} {ip}")

# output trailer for DeltaT here !!!

print("}};")






